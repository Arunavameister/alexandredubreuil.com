#!/bin/bash

FILENAME_IN=${1?"Usage: $0 filename_in"}
FOLDER_OUT=${2?"Usage: $0 folder_out"}
LANGUAGE="${3:-en-US}"
NAME="${4:-en-US-Wavenet-B}"
GENDER="${5:-MALE}"
PITCH="${6:-0}"

function wavenet() {
	# TODO use jq
	local TEXT="$1"
	local JSON=$( curl -s \
	  -H "Content-Type: application/json; charset=utf-8" \
	  --data "{
	    \"input\": {
	      \"text\": \"$TEXT\",
	    },
	    \"voice\": {
	      \"languageCode\": \"$LANGUAGE\",
	      \"name\": \"$NAME\",
	      \"ssmlGender\": \"$GENDER\",
	    },
	    \"audioConfig\": {
	      \"audioEncoding\": \"MP3\",
	      \"pitch\": \"$PITCH\",
	    }
	  }" "https://texttospeech.googleapis.com/v1beta1/text:synthesize?key=${GC_API_KEY}" )
	local ERROR=$( echo "$JSON" | jq ".error" )
	if [ "$ERROR" != "null" ]; then
		echo "Error on text '$TEXT'"
		echo $JSON
	fi
	BASE64=$( echo "$JSON" | jq --raw-output ".audioContent" )
}

echo "Speaking dream in ($LANGUAGE, $NAME, $GENDER, $PITCH) from $FILENAME_IN"

while read -r line
do
	if [ ! -z "$line" ]; then
		FILENAME_OUT=$( echo "$line" | \
				tr '[:upper:]' '[:lower:]' | \
  				sed "s/?//g" | \
				sed "s/'//g" | \
				sed "s/ -//g" | \
				sed "s/,//g" | \
				sed "s/\.//g" | \
				sed "s/\// /g" | \
				sed "s/\\$//g" | \
				sed "s/\\!//g" | \
				sed "s/ /_/g" | \
				cut -d '_' -f 1-10 )
		FILENAME_OUT="${FILENAME_OUT}.mp3"
		wavenet "$line"
		echo "Dreaming about '$line' in file '$FILENAME_OUT'"
		echo "$BASE64" | base64 --decode > "$FOLDER_OUT/$FILENAME_OUT"
	fi
done < "$FILENAME_IN"

